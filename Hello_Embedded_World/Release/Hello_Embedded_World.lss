
Hello_Embedded_World.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000318  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800100  00800100  0000038c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003bc  2**2
                  CONTENTS, READONLY
  5 .debug_info   000009bb  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000934  00000000  00000000  00000db7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ca  00000000  00000000  000016eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000035a  00000000  00000000  000018b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
   8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
   c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  10:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  14:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  18:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  1c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  20:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  24:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  28:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  2c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  30:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  34:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  38:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  3c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  40:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  44:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  48:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  4c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  50:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  54:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  58:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  5c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  60:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  64:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  68:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  6c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  70:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  74:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  78:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  7c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  80:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  84:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  88:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  8c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  90:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  94:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  98:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  9c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  ac:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  bc:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_clear_bss>:
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	01 c0       	rjmp	.+2      	; 0xe2 <.do_clear_bss_start>

000000e0 <.do_clear_bss_loop>:
  e0:	1d 92       	st	X+, r1

000000e2 <.do_clear_bss_start>:
  e2:	a0 35       	cpi	r26, 0x50	; 80
  e4:	b2 07       	cpc	r27, r18
  e6:	e1 f7       	brne	.-8      	; 0xe0 <.do_clear_bss_loop>
  e8:	0e 94 8a 00 	call	0x114	; 0x114 <main>
  ec:	0c 94 8a 01 	jmp	0x314	; 0x314 <_exit>

000000f0 <__bad_interrupt>:
  f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f4 <GPIO_Output_Init>:
  f4:	fc 01       	movw	r30, r24
  f6:	21 81       	ldd	r18, Z+1	; 0x01
  f8:	62 2b       	or	r22, r18
  fa:	61 83       	std	Z+1, r22	; 0x01
  fc:	08 95       	ret

000000fe <GPIO_Output_Set>:
  fe:	fc 01       	movw	r30, r24
 100:	22 81       	ldd	r18, Z+2	; 0x02
 102:	62 2b       	or	r22, r18
 104:	62 83       	std	Z+2, r22	; 0x02
 106:	08 95       	ret

00000108 <GPIO_Output_Clear>:
 108:	fc 01       	movw	r30, r24
 10a:	92 81       	ldd	r25, Z+2	; 0x02
 10c:	60 95       	com	r22
 10e:	69 23       	and	r22, r25
 110:	62 83       	std	Z+2, r22	; 0x02
 112:	08 95       	ret

00000114 <main>:
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	1f 92       	push	r1
 11a:	cd b7       	in	r28, 0x3d	; 61
 11c:	de b7       	in	r29, 0x3e	; 62
 11e:	60 e8       	ldi	r22, 0x80	; 128
 120:	75 e2       	ldi	r23, 0x25	; 37
 122:	80 ec       	ldi	r24, 0xC0	; 192
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 59 01 	call	0x2b2	; 0x2b2 <UART_init>
 12a:	60 e8       	ldi	r22, 0x80	; 128
 12c:	75 e2       	ldi	r23, 0x25	; 37
 12e:	88 ec       	ldi	r24, 0xC8	; 200
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 59 01 	call	0x2b2	; 0x2b2 <UART_init>
 136:	60 e8       	ldi	r22, 0x80	; 128
 138:	75 e2       	ldi	r23, 0x25	; 37
 13a:	80 ed       	ldi	r24, 0xD0	; 208
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <UART_init>
 142:	0e 94 65 01 	call	0x2ca	; 0x2ca <export_print_buffer>
 146:	40 ea       	ldi	r20, 0xA0	; 160
 148:	55 e2       	ldi	r21, 0x25	; 37
 14a:	66 e2       	ldi	r22, 0x26	; 38
 14c:	70 e0       	ldi	r23, 0x00	; 0
 14e:	8c e4       	ldi	r24, 0x4C	; 76
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <SPI_master_init>
 156:	40 ea       	ldi	r20, 0xA0	; 160
 158:	55 e2       	ldi	r21, 0x25	; 37
 15a:	66 e2       	ldi	r22, 0x26	; 38
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	8c ea       	ldi	r24, 0xAC	; 172
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <SPI_master_init>
 166:	82 e5       	ldi	r24, 0x52	; 82
 168:	89 83       	std	Y+1, r24	; 0x01
 16a:	ae 01       	movw	r20, r28
 16c:	4f 5f       	subi	r20, 0xFF	; 255
 16e:	5f 4f       	sbci	r21, 0xFF	; 255
 170:	6c ea       	ldi	r22, 0xAC	; 172
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	8c e4       	ldi	r24, 0x4C	; 76
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 3d 01 	call	0x27a	; 0x27a <SPI_transfer>
 17c:	f6 cf       	rjmp	.-20     	; 0x16a <main+0x56>

0000017e <round_up_pwr2>:
 17e:	82 30       	cpi	r24, 0x02	; 2
 180:	80 f0       	brcs	.+32     	; 0x1a2 <round_up_pwr2+0x24>
 182:	81 38       	cpi	r24, 0x81	; 129
 184:	80 f4       	brcc	.+32     	; 0x1a6 <round_up_pwr2+0x28>
 186:	81 50       	subi	r24, 0x01	; 1
 188:	98 2f       	mov	r25, r24
 18a:	96 95       	lsr	r25
 18c:	89 2b       	or	r24, r25
 18e:	98 2f       	mov	r25, r24
 190:	96 95       	lsr	r25
 192:	96 95       	lsr	r25
 194:	89 2b       	or	r24, r25
 196:	98 2f       	mov	r25, r24
 198:	92 95       	swap	r25
 19a:	9f 70       	andi	r25, 0x0F	; 15
 19c:	89 2b       	or	r24, r25
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	08 95       	ret
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	08 95       	ret
 1a6:	80 e8       	ldi	r24, 0x80	; 128
 1a8:	08 95       	ret

000001aa <get_spi_prescaler_mask>:
 1aa:	0e 94 bf 00 	call	0x17e	; 0x17e <round_up_pwr2>
 1ae:	80 31       	cpi	r24, 0x10	; 16
 1b0:	79 f0       	breq	.+30     	; 0x1d0 <get_spi_prescaler_mask+0x26>
 1b2:	30 f4       	brcc	.+12     	; 0x1c0 <get_spi_prescaler_mask+0x16>
 1b4:	82 30       	cpi	r24, 0x02	; 2
 1b6:	91 f0       	breq	.+36     	; 0x1dc <get_spi_prescaler_mask+0x32>
 1b8:	88 30       	cpi	r24, 0x08	; 8
 1ba:	91 f4       	brne	.+36     	; 0x1e0 <get_spi_prescaler_mask+0x36>
 1bc:	85 e0       	ldi	r24, 0x05	; 5
 1be:	08 95       	ret
 1c0:	80 34       	cpi	r24, 0x40	; 64
 1c2:	41 f0       	breq	.+16     	; 0x1d4 <get_spi_prescaler_mask+0x2a>
 1c4:	80 38       	cpi	r24, 0x80	; 128
 1c6:	41 f0       	breq	.+16     	; 0x1d8 <get_spi_prescaler_mask+0x2e>
 1c8:	80 32       	cpi	r24, 0x20	; 32
 1ca:	51 f4       	brne	.+20     	; 0x1e0 <get_spi_prescaler_mask+0x36>
 1cc:	86 e0       	ldi	r24, 0x06	; 6
 1ce:	08 95       	ret
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	08 95       	ret
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	08 95       	ret
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	08 95       	ret
 1dc:	84 e0       	ldi	r24, 0x04	; 4
 1de:	08 95       	ret
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	08 95       	ret

000001e4 <SPI_master_init>:
 1e4:	cf 93       	push	r28
 1e6:	df 93       	push	r29
 1e8:	ec 01       	movw	r28, r24
 1ea:	9a 01       	movw	r18, r20
 1ec:	ab 01       	movw	r20, r22
 1ee:	88 81       	ld	r24, Y
 1f0:	83 7f       	andi	r24, 0xF3	; 243
 1f2:	88 83       	st	Y, r24
 1f4:	88 81       	ld	r24, Y
 1f6:	80 64       	ori	r24, 0x40	; 64
 1f8:	88 83       	st	Y, r24
 1fa:	88 81       	ld	r24, Y
 1fc:	80 61       	ori	r24, 0x10	; 16
 1fe:	88 83       	st	Y, r24
 200:	88 81       	ld	r24, Y
 202:	80 62       	ori	r24, 0x20	; 32
 204:	88 83       	st	Y, r24
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	74 e2       	ldi	r23, 0x24	; 36
 20a:	84 ef       	ldi	r24, 0xF4	; 244
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivmodsi4>
 212:	82 2f       	mov	r24, r18
 214:	0e 94 d5 00 	call	0x1aa	; 0x1aa <get_spi_prescaler_mask>
 218:	98 81       	ld	r25, Y
 21a:	28 2f       	mov	r18, r24
 21c:	23 70       	andi	r18, 0x03	; 3
 21e:	92 2b       	or	r25, r18
 220:	98 83       	st	Y, r25
 222:	99 81       	ldd	r25, Y+1	; 0x01
 224:	86 95       	lsr	r24
 226:	86 95       	lsr	r24
 228:	89 2b       	or	r24, r25
 22a:	89 83       	std	Y+1, r24	; 0x01
 22c:	cc 34       	cpi	r28, 0x4C	; 76
 22e:	d1 05       	cpc	r29, r1
 230:	d1 f4       	brne	.+52     	; 0x266 <SPI_master_init+0x82>
 232:	60 e2       	ldi	r22, 0x20	; 32
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	83 e2       	ldi	r24, 0x23	; 35
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 7a 00 	call	0xf4	; 0xf4 <GPIO_Output_Init>
 23e:	60 e2       	ldi	r22, 0x20	; 32
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	83 e2       	ldi	r24, 0x23	; 35
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 7f 00 	call	0xfe	; 0xfe <GPIO_Output_Set>
 24a:	60 e8       	ldi	r22, 0x80	; 128
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	83 e2       	ldi	r24, 0x23	; 35
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 7a 00 	call	0xf4	; 0xf4 <GPIO_Output_Init>
 256:	60 e8       	ldi	r22, 0x80	; 128
 258:	70 e0       	ldi	r23, 0x00	; 0
 25a:	83 e2       	ldi	r24, 0x23	; 35
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	0c 94 84 00 	jmp	0x108	; 0x108 <GPIO_Output_Clear>
 266:	cc 3a       	cpi	r28, 0xAC	; 172
 268:	d1 05       	cpc	r29, r1
 26a:	21 f4       	brne	.+8      	; 0x274 <SPI_master_init+0x90>
 26c:	6b 9a       	sbi	0x0d, 3	; 13
 26e:	57 9a       	sbi	0x0a, 7	; 10
 270:	73 9a       	sbi	0x0e, 3	; 14
 272:	5f 98       	cbi	0x0b, 7	; 11
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	08 95       	ret

0000027a <SPI_transfer>:
 27a:	fc 01       	movw	r30, r24
 27c:	da 01       	movw	r26, r20
 27e:	62 83       	std	Z+2, r22	; 0x02
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	21 81       	ldd	r18, Z+1	; 0x01
 286:	01 96       	adiw	r24, 0x01	; 1
 288:	27 fd       	sbrc	r18, 7
 28a:	03 c0       	rjmp	.+6      	; 0x292 <SPI_transfer+0x18>
 28c:	00 97       	sbiw	r24, 0x00	; 0
 28e:	d1 f7       	brne	.-12     	; 0x284 <SPI_transfer+0xa>
 290:	02 c0       	rjmp	.+4      	; 0x296 <SPI_transfer+0x1c>
 292:	89 2b       	or	r24, r25
 294:	19 f4       	brne	.+6      	; 0x29c <SPI_transfer+0x22>
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	8c 93       	st	X, r24
 29a:	08 95       	ret
 29c:	82 2f       	mov	r24, r18
 29e:	80 74       	andi	r24, 0x40	; 64
 2a0:	26 ff       	sbrs	r18, 6
 2a2:	04 c0       	rjmp	.+8      	; 0x2ac <SPI_transfer+0x32>
 2a4:	82 81       	ldd	r24, Z+2	; 0x02
 2a6:	8c 93       	st	X, r24
 2a8:	8e ef       	ldi	r24, 0xFE	; 254
 2aa:	08 95       	ret
 2ac:	92 81       	ldd	r25, Z+2	; 0x02
 2ae:	9c 93       	st	X, r25
 2b0:	08 95       	ret

000002b2 <UART_init>:
 2b2:	fc 01       	movw	r30, r24
 2b4:	15 82       	std	Z+5, r1	; 0x05
 2b6:	87 e6       	ldi	r24, 0x67	; 103
 2b8:	84 83       	std	Z+4, r24	; 0x04
 2ba:	10 82       	st	Z, r1
 2bc:	12 82       	std	Z+2, r1	; 0x02
 2be:	86 e0       	ldi	r24, 0x06	; 6
 2c0:	82 83       	std	Z+2, r24	; 0x02
 2c2:	11 82       	std	Z+1, r1	; 0x01
 2c4:	88 e1       	ldi	r24, 0x18	; 24
 2c6:	81 83       	std	Z+1, r24	; 0x01
 2c8:	08 95       	ret

000002ca <export_print_buffer>:
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	08 95       	ret

000002d0 <__udivmodsi4>:
 2d0:	a1 e2       	ldi	r26, 0x21	; 33
 2d2:	1a 2e       	mov	r1, r26
 2d4:	aa 1b       	sub	r26, r26
 2d6:	bb 1b       	sub	r27, r27
 2d8:	fd 01       	movw	r30, r26
 2da:	0d c0       	rjmp	.+26     	; 0x2f6 <__udivmodsi4_ep>

000002dc <__udivmodsi4_loop>:
 2dc:	aa 1f       	adc	r26, r26
 2de:	bb 1f       	adc	r27, r27
 2e0:	ee 1f       	adc	r30, r30
 2e2:	ff 1f       	adc	r31, r31
 2e4:	a2 17       	cp	r26, r18
 2e6:	b3 07       	cpc	r27, r19
 2e8:	e4 07       	cpc	r30, r20
 2ea:	f5 07       	cpc	r31, r21
 2ec:	20 f0       	brcs	.+8      	; 0x2f6 <__udivmodsi4_ep>
 2ee:	a2 1b       	sub	r26, r18
 2f0:	b3 0b       	sbc	r27, r19
 2f2:	e4 0b       	sbc	r30, r20
 2f4:	f5 0b       	sbc	r31, r21

000002f6 <__udivmodsi4_ep>:
 2f6:	66 1f       	adc	r22, r22
 2f8:	77 1f       	adc	r23, r23
 2fa:	88 1f       	adc	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	1a 94       	dec	r1
 300:	69 f7       	brne	.-38     	; 0x2dc <__udivmodsi4_loop>
 302:	60 95       	com	r22
 304:	70 95       	com	r23
 306:	80 95       	com	r24
 308:	90 95       	com	r25
 30a:	9b 01       	movw	r18, r22
 30c:	ac 01       	movw	r20, r24
 30e:	bd 01       	movw	r22, r26
 310:	cf 01       	movw	r24, r30
 312:	08 95       	ret

00000314 <_exit>:
 314:	f8 94       	cli

00000316 <__stop_program>:
 316:	ff cf       	rjmp	.-2      	; 0x316 <__stop_program>
